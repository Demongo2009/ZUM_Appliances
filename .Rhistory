library(corrplot)
hour<-hour(as.POSIXct(data[,1:1], format=c("%Y-%m-%d %H:%M:%S")))
data_numeric['hour']<-hour
#pory dnia
#22:00 - 6:00 noc
#6:00-10:00 rano
#10:00-12:00 przedpolodnie
#12:00 - 14:00 wczesne popolodnie
#14:00 -18:00 popolodnie
#18:00 - 22:00 -wieczor
time_of_day <- rep(0,size(data$date))
library(lubridate)
library(corrplot)
hour<-hour(as.POSIXct(data[,1:1], format=c("%Y-%m-%d %H:%M:%S")))
data_numeric['hour']<-hour
#pory dnia
#22:00 - 6:00 noc
#6:00-10:00 rano
#10:00-12:00 przedpolodnie
#12:00 - 14:00 wczesne popolodnie
#14:00 -18:00 popolodnie
#18:00 - 22:00 -wieczor
time_of_day <- rep(0,length(data$date))
res <- cor(data_numeric, use = "complete.obs")
res
corrplot(res, type = "full", order = "hclust",
tl.col = "black")
library(lubridate)
library(corrplot)
hour<-hour(as.POSIXct(data[,1:1], format=c("%Y-%m-%d %H:%M:%S")))
hist(hour)
data_numeric['hour']<-hour
#pory dnia
#22:00 - 6:00 noc 12
#6:00-10:00 rano 16
#10:00-12:00 przedpolodnie 18
#12:00 - 14:00 wczesne popolodnie 20
#14:00 -18:00 popolodnie 24
#18:00 - 22:00 -wieczor 4
time_of_day <- rep(0,length(data$date))
time_of_day[(hour>=22&hour<=24)|(hour>=0&hour<6)]=12
time_of_day[(hour>=6&hour<10)]=16
time_of_day[(hour>=10&hour<12)]=18
time_of_day[(hour>=12&hour<14)]=20
res <- cor(data_numeric, use = "complete.obs")
res
corrplot(res, type = "full", order = "hclust",
tl.col = "black")
library(lubridate)
library(corrplot)
hour<-hour(as.POSIXct(data[,1:1], format=c("%Y-%m-%d %H:%M:%S")))
data_numeric['hour']<-hour
#pory dnia
#22:00 - 6:00 noc 12
#6:00-10:00 rano 16
#10:00-12:00 przedpolodnie 18
#12:00 - 14:00 wczesne popolodnie 20
#14:00 -18:00 popolodnie 24
#18:00 - 22:00 -wieczor 4
time_of_day <- rep(0,length(data$date))
time_of_day[(hour>=22&hour<=24)|(hour>=0&hour<6)]=12
time_of_day[(hour>=6&hour<10)]=16
time_of_day[(hour>=10&hour<12)]=18
time_of_day[(hour>=12&hour<14)]=20
time_of_day[(hour>=14&hour<18)]=24
time_of_day[(hour>=18&hour<22)]=4
data_numeric['time_of_day']<-time_of_day
res <- cor(data_numeric, use = "complete.obs")
res
corrplot(res, type = "full", order = "hclust",
tl.col = "black")
library(lubridate)
library(corrplot)
hour<-hour(as.POSIXct(data[,1:1], format=c("%Y-%m-%d %H:%M:%S")))
data_numeric['hour']<-hour
#pory dnia
#22:00 - 6:00 noc 1
#6:00-10:00 rano 2
#10:00-12:00 przedpolodnie 3
#12:00 - 14:00 wczesne popolodnie 4
#14:00 -18:00 popolodnie 5
#18:00 - 22:00 -wieczor 0
time_of_day <- rep(0,length(data$date))
time_of_day[(hour>=22&hour<=24)|(hour>=0&hour<6)]=1
time_of_day[(hour>=6&hour<10)]=2
time_of_day[(hour>=10&hour<12)]=3
time_of_day[(hour>=12&hour<14)]=4
time_of_day[(hour>=14&hour<18)]=5
time_of_day[(hour>=18&hour<22)]=0
data_numeric['time_of_day']<-time_of_day
res <- cor(data_numeric, use = "complete.obs")
res
corrplot(res, type = "full", order = "hclust",
tl.col = "black")
library(lubridate)
library(corrplot)
hour<-hour(as.POSIXct(data[,1:1], format=c("%Y-%m-%d %H:%M:%S")))
data_numeric['hour']<-hour
#pory dnia
#22:00 - 6:00 noc 1
#6:00-10:00 rano 2
#10:00-12:00 przedpolodnie 3
#12:00 - 14:00 wczesne popolodnie 4
#14:00 -18:00 popolodnie 5
#18:00 - 22:00 -wieczor 0
time_of_day <- rep(0,length(data$date))
time_of_day[(hour>=22&hour<=24)|(hour>=0&hour<6)]=1
time_of_day[(hour>=6&hour<10)]=2
time_of_day[(hour>=10&hour<12)]=3
time_of_day[(hour>=12&hour<14)]=4
time_of_day[(hour>=14&hour<18)]=5
time_of_day[(hour>=18&hour<22)]=0
data_numeric['time_of_day']<-time_of_day
res <- cor(data_numeric, use = "complete.obs")
round(res, 2)
corrplot(res, type = "full", order = "hclust",
tl.col = "black")
write.csv(data_numeric,'./data/energy_data_after_analysis.csv')
write.csv(data_numeric,'../data/energy_data_after_analysis.csv')
for (i in 1:ncol(data_numeric[,1: ncol(data_numeric) ])){
qqnorm(data_numeric[, i], main = names(data_numeric[i]), col=3)
qqline(data_numeric[, i])
}
for (i in 1:ncol(data_numeric[,1: ncol(data_numeric) ])){
qqnorm(data_numeric[, i], main = names(data_numeric[i]), col=3)
qqline(data_numeric[, i])
}
View(data_stat)
data <- read.csv(file = "data/energy_data_after_analysis.csv", stringsAsFactors = FALSE)
setwd("C:/Users/braciniewska/Documents/zum_appliances/ZUM_Appliances")
data <- read.csv(file = "data/energy_data_after_analysis.csv", stringsAsFactors = FALSE)
data <- read.csv(file = "data/energy_data_after_analysis.csv",sep=",", stringsAsFactors = FALSE)
data <- read.csv(file = "data/energy_data_after_analysis.csv",sep=",", stringsAsFactors = FALSE)
data <- read.csv(file = "data\energy_data_after_analysis.csv",sep=",", stringsAsFactors = FALSE)
getwd()
data <- read.csv(file = "C:/Users/braciniewska/Documents/zum_appliances/ZUM_Appliances/data/energy_data_after_analysis.csv",sep=",", stringsAsFactors = FALSE)
str(data)
# w ilu kolumnach brakuje danych
which(is.na(data))
# ile jest łącznie brakujących danych
sum(is.na(data))
data[is.na(data)] = 0
# w ilu kolumnach brakuje danych
which(is.na(data))
# ile jest łącznie brakujących danych
sum(is.na(data))
data[is.na(data)] = 0
# w ilu kolumnach brakuje danych
which(is.na(data))
# ile jest łącznie brakujących danych
sum(is.na(data))
data[is.na(data)] = 0
library(lubridate)
library(corrplot)
library(Hmisc)
data$logAppliances = log(data$Appliances)
data$logVisibility = log(data$Visibility)
data$logWindspeed = log(data$Windspeed)
data$logRh_out=log(data$Tdewpoint)
data$logT9=log(data$T9)
data$logT3=log(data$T3)
data$logT4=log(data$T4)
data$logT5=log(data$T5)
res <- cor(data, use = "complete.obs")
res[is.na(res)] = 0
round(res, 2)
corrplot(res, type = "full", order = "hclust",
tl.col = "black")
atributes <- data[,!names(data) %in% c("date", "logRh_out", "logWindspeed","X","T3","T4","T5","T9","Tdewpoint","rv1","rv2","RH_5","RH_3","RH_4","Windspeed","Visibility","logVisibility","Appliances","logAppliances")]
str(atributes)
atributes_with_interactions = model.matrix(~(lights+Press_mm_hg+RH_1+RH_2+RH_6+RH_7+RH_8+RH_9+RH_out+T_out+T1+T2+T6+T7+T8+hour+time_of_day+logT9+logT3+logT4+logT5)^2,atributes)
corr_data = as.data.frame(atributes_with_interactions)
corr_data$logAppliances = data$logAppliances
library(lubridate)
library(corrplot)
res <- cor(corr_data, use = "complete.obs")
res[is.na(res)] = 0
round(res, 2)
res = as.data.frame(res)
res[abs(res$logAppliances) > 0.4] # nie istnieja korelacje wieksze od 0.4,
data <- read.csv(file = "C:/Users/braciniewska/Documents/zum_appliances/ZUM_Appliances/data/energy_data_after_analysis.csv",sep=",", stringsAsFactors = FALSE)
str(data)
# w ilu kolumnach brakuje danych
which(is.na(data))
# ile jest łącznie brakujących danych
sum(is.na(data))
data[is.na(data)] = 0
# w ilu kolumnach brakuje danych
which(is.na(data))
# ile jest łącznie brakujących danych
sum(is.na(data))
mising<-data[is.na(data),]
data[is.na(data)] = 0
data <- read.csv(file = "C:/Users/braciniewska/Documents/zum_appliances/ZUM_Appliances/data/energy_data_after_analysis.csv",sep=",", stringsAsFactors = FALSE)
str(data)
# w ilu kolumnach brakuje danych
which(is.na(data))
# ile jest łącznie brakujących danych
sum(is.na(data))
mising<-data[is.na(data),]
data[is.na(data)] = 0
# w ilu kolumnach brakuje danych
which(is.na(data))
# ile jest łącznie brakujących danych
sum(is.na(data))
mising<-data[is.na(data),]
data[is.na(data)] = 0
res <- cor(data, use = "complete.obs")
res[is.na(res)] = 0
round(res, 2)
corrplot(res, type = "full", order = "hclust",
tl.col = "black")
atributes <- data[,!names(data) %in% c("date", "logRh_out", "logWindspeed","X","T3","T4","T5","T9","Tdewpoint","rv1","rv2","RH_5","RH_3","RH_4","Windspeed","Visibility","logVisibility","Appliances","logAppliances")]
str(atributes)
atributes_with_interactions = model.matrix(~(lights+Press_mm_hg+RH_1+RH_2+RH_6+RH_7+RH_8+RH_9+RH_out+T_out+T1+T2+T6+T7+T8+hour+time_of_day+logT9+logT3+logT4+logT5)^2,atributes)
library(lubridate)
library(corrplot)
library(Hmisc)
data$logAppliances = log(data$Appliances)
data$logVisibility = log(data$Visibility)
data$logWindspeed = log(data$Windspeed)
data$logRh_out=log(data$Tdewpoint)
data$logT9=log(data$T9)
data$logT3=log(data$T3)
data$logT4=log(data$T4)
data$logT5=log(data$T5)
data <- read.csv(file = "C:/Users/braciniewska/Documents/zum_appliances/ZUM_Appliances/data/energy_data_after_analysis.csv",sep=",", stringsAsFactors = FALSE)
str(data)
# w ilu kolumnach brakuje danych
which(is.na(data))
# ile jest łącznie brakujących danych
sum(is.na(data))
mising<-data[is.na(data),]
data[is.na(data)] = 0
library(lubridate)
library(corrplot)
library(Hmisc)
data$logAppliances = log(data$Appliances)
data$logVisibility = log(data$Visibility)
data$logWindspeed = log(data$Windspeed)
data$logRh_out=log(data$Tdewpoint)
data$logT9=log(data$T9)
data$logT3=log(data$T3)
data$logT4=log(data$T4)
data$logT5=log(data$T5)
res <- cor(data, use = "complete.obs")
res[is.na(res)] = 0
round(res, 2)
corrplot(res, type = "full", order = "hclust",
tl.col = "black")
atributes <- data[,!names(data) %in% c("date", "logRh_out", "logWindspeed","X","T3","T4","T5","T9","Tdewpoint","rv1","rv2","RH_5","RH_3","RH_4","Windspeed","Visibility","logVisibility","Appliances","logAppliances")]
str(atributes)
atributes_with_interactions = model.matrix(~(lights+Press_mm_hg+RH_1+RH_2+RH_6+RH_7+RH_8+RH_9+RH_out+T_out+T1+T2+T6+T7+T8+hour+time_of_day+logT9+logT3+logT4+logT5)^2,atributes)
corr_data = as.data.frame(atributes_with_interactions)
corr_data$logAppliances = data$logAppliances
library(lubridate)
library(corrplot)
res <- cor(corr_data, use = "complete.obs")
res[is.na(res)] = 0
round(res, 2)
res = as.data.frame(res)
res[abs(res$logAppliances) > 0.4] # nie istnieja korelacje wieksze od 0.4,
atributes = scale(atributes)
atributes$logAppliances = data$logAppliances
install.packages("Boruta")
library(Boruta)
memory.limit(size=5000)
set.seed(42)
boruta.train <- Boruta(logAppliances~., data = atributes, doTrace = 2)
print(boruta.train)
atributes = scale(atributes)
atributes = scale(atributes)
```{r}
atributes = scale(atributes)
atributes <- scale(atributes)
scale(atributes)
data <- read.csv(file = "C:/Users/braciniewska/Documents/zum_appliances/ZUM_Appliances/data/energy_data_after_analysis.csv",sep=",", stringsAsFactors = FALSE)
str(data)
# w ilu kolumnach brakuje danych
which(is.na(data))
# ile jest łącznie brakujących danych
sum(is.na(data))
mising<-data[is.na(data),]
data[is.na(data)] = 0
library(lubridate)
library(corrplot)
library(Hmisc)
data$logAppliances = log(data$Appliances)
data$logVisibility = log(data$Visibility)
data$logWindspeed = log(data$Windspeed)
data$logRh_out=log(data$Tdewpoint)
data$logT9=log(data$T9)
data$logT3=log(data$T3)
data$logT4=log(data$T4)
data$logT5=log(data$T5)
res <- cor(data, use = "complete.obs")
res[is.na(res)] = 0
round(res, 2)
corrplot(res, type = "full", order = "hclust",
tl.col = "black")
atributes <- data[,!names(data) %in% c("date", "logRh_out", "logWindspeed","X","T3","T4","T5","T9","Tdewpoint","rv1","rv2","RH_5","RH_3","RH_4","Windspeed","Visibility","logVisibility","Appliances","logAppliances")]
str(atributes)
atributes_with_interactions = model.matrix(~(lights+Press_mm_hg+RH_1+RH_2+RH_6+RH_7+RH_8+RH_9+RH_out+T_out+T1+T2+T6+T7+T8+hour+time_of_day+logT9+logT3+logT4+logT5)^2,atributes)
corr_data = as.data.frame(atributes_with_interactions)
corr_data$logAppliances = data$logAppliances
library(lubridate)
library(corrplot)
res <- cor(corr_data, use = "complete.obs")
res[is.na(res)] = 0
round(res, 2)
res = as.data.frame(res)
res[abs(res$logAppliances) > 0.4] # nie istnieja korelacje wieksze od 0.4,
atributes <- scale(atributes)
atributes$logAppliances = data$logAppliances
install.packages("Boruta")
library(Boruta)
#memory.limit(size=5000)
set.seed(42)
boruta.train <- Boruta(logAppliances~., data = atributes, doTrace = 2)
atributes <- scale(atributes)
sum(is.na(dappliances))
sum(is.na(appliances))
sum(is.na(atributes))
scale(atributes)
colMeans(atributes)
at<-unlist(atributes)
atributes <- scale(atributes)
View(atributes)
at<-matrix(unlist(atributes))
atributes <- scale(matrix(unlist(atributes))
atributes$logAppliances = data$logAppliances
atributes <- scale(matrix(unlist(atributes)))
atributes$logAppliances = data$logAppliances
#install.packages("Boruta")
library(Boruta)
#memory.limit(size=5000)
set.seed(42)
boruta.train <- Boruta(logAppliances~., data = atributes, doTrace = 2)
print(boruta.train)
atributes <- scale(matrix(unlist(atributes)))
atributes$logAppliances = data$logAppliances
#install.packages("Boruta")
library(Boruta)
#memory.limit(size=5000)
set.seed(42)
boruta.train <- Boruta(logAppliances~., data = atributes)
print(boruta.train)
data <- read.csv(file = "C:/Users/braciniewska/Documents/zum_appliances/ZUM_Appliances/data/energy_data_after_analysis.csv",sep=",", stringsAsFactors = FALSE)
str(data)
# w ilu kolumnach brakuje danych
which(is.na(data))
# ile jest łącznie brakujących danych
sum(is.na(data))
mising<-data[is.na(data),]
data[is.na(data)] = 0
library(lubridate)
library(corrplot)
library(Hmisc)
data$logAppliances = log(data$Appliances)
data$logVisibility = log(data$Visibility)
data$logWindspeed = log(data$Windspeed)
data$logRh_out=log(data$Tdewpoint)
data$logT9=log(data$T9)
data$logT3=log(data$T3)
data$logT4=log(data$T4)
data$logT5=log(data$T5)
res <- cor(data, use = "complete.obs")
res[is.na(res)] = 0
round(res, 2)
corrplot(res, type = "full", order = "hclust",
tl.col = "black")
atributes <- data[,!names(data) %in% c("date", "logRh_out", "logWindspeed","X","T3","T4","T5","T9","Tdewpoint","rv1","rv2","RH_5","RH_3","RH_4","Windspeed","Visibility","logVisibility","Appliances","logAppliances")]
str(atributes)
atributes_with_interactions = model.matrix(~(lights+Press_mm_hg+RH_1+RH_2+RH_6+RH_7+RH_8+RH_9+RH_out+T_out+T1+T2+T6+T7+T8+hour+time_of_day+logT9+logT3+logT4+logT5)^2,atributes)
corr_data = as.data.frame(atributes_with_interactions)
corr_data$logAppliances = data$logAppliances
library(lubridate)
library(corrplot)
res <- cor(corr_data, use = "complete.obs")
res[is.na(res)] = 0
round(res, 2)
res = as.data.frame(res)
res[abs(res$logAppliances) > 0.4] # nie istnieja korelacje wieksze od 0.4,
atributes2 <- scale(matrix(unlist(atributes)))
atributes2 <- scale(atributes)
atributes2$logAppliances = data$logAppliances
data <- read.csv(file = "C:/Users/braciniewska/Documents/zum_appliances/ZUM_Appliances/data/energy_data_after_analysis.csv",sep=",", stringsAsFactors = FALSE)
str(data)
# w ilu kolumnach brakuje danych
which(is.na(data))
# ile jest łącznie brakujących danych
sum(is.na(data))
mising<-data[is.na(data),]
data[is.na(data)] = 0
library(lubridate)
library(corrplot)
library(Hmisc)
data$logAppliances = log(data$Appliances)
data$logVisibility = log(data$Visibility)
data$logWindspeed = log(data$Windspeed)
data$logRh_out=log(data$Tdewpoint)
data$logT9=log(data$T9)
data$logT3=log(data$T3)
data$logT4=log(data$T4)
data$logT5=log(data$T5)
res <- cor(data, use = "complete.obs")
res[is.na(res)] = 0
round(res, 2)
corrplot(res, type = "full", order = "hclust",
tl.col = "black")
atributes <- data[,!names(data) %in% c("date", "logRh_out", "logWindspeed","X","T3","T4","T5","T9","Tdewpoint","rv1","rv2","RH_5","RH_3","RH_4","Windspeed","Visibility","logVisibility","Appliances","logAppliances")]
str(atributes)
atributes_with_interactions = model.matrix(~(lights+Press_mm_hg+RH_1+RH_2+RH_6+RH_7+RH_8+RH_9+RH_out+T_out+T1+T2+T6+T7+T8+hour+time_of_day+logT9+logT3+logT4+logT5)^2,atributes)
corr_data = as.data.frame(atributes_with_interactions)
corr_data$logAppliances = data$logAppliances
library(lubridate)
library(corrplot)
res <- cor(corr_data, use = "complete.obs")
res[is.na(res)] = 0
round(res, 2)
res = as.data.frame(res)
res[abs(res$logAppliances) > 0.4] # nie istnieja korelacje wieksze od 0.4,
atributes2 <- scale(atributes)
atributes2$logAppliances <- data$logAppliances
#install.packages("Boruta")
library(Boruta)
atributes2 <- scale(atributes)
atributes3 <- scale(atributes)
setwd("C:/Users/braciniewska/Documents/zum_appliances/ZUM_Appliances")
data <- read.csv(file = "data/energy_data_after_analysis.csv", stringsAsFactors = FALSE)
data <- read.csv(file = "C:/Users/braciniewska/Documents/zum_appliances/ZUM_Appliances/data/energy_data_after_analysis.csv", stringsAsFactors = FALSE)
str(data)
# w ilu kolumnach brakuje danych
which(is.na(data))
# ile jest łącznie brakujących danych
sum(is.na(data))
mising<-data[is.na(data),]
data[is.na(data)] = 0
library(lubridate)
library(corrplot)
library(Hmisc)
data$logAppliances = log(data$Appliances)
data$logVisibility = log(data$Visibility)
data$logWindspeed = log(data$Windspeed)
data$logRh_out=log(data$Tdewpoint)
data$logT9=log(data$T9)
data$logT3=log(data$T3)
data$logT4=log(data$T4)
data$logT5=log(data$T5)
res <- cor(data, use = "complete.obs")
res[is.na(res)] = 0
round(res, 2)
corrplot(res, type = "full", order = "hclust",
tl.col = "black")
atributes <- data[,!names(data) %in% c("date", "logRh_out", "logWindspeed","X","T3","T4","T5","T9","Tdewpoint","rv1","rv2","RH_5","RH_3","RH_4","Windspeed","Visibility","logVisibility","Appliances","logAppliances")]
str(atributes)
atributes_with_interactions = model.matrix(~(lights+Press_mm_hg+RH_1+RH_2+RH_6+RH_7+RH_8+RH_9+RH_out+T_out+T1+T2+T6+T7+T8+hour+time_of_day+logT9+logT3+logT4+logT5)^2,atributes)
corr_data = as.data.frame(atributes_with_interactions)
corr_data$logAppliances = data$logAppliances
library(lubridate)
library(corrplot)
res <- cor(corr_data, use = "complete.obs")
res[is.na(res)] = 0
round(res, 2)
res = as.data.frame(res)
res[abs(res$logAppliances) > 0.4] # nie istnieja korelacje wieksze od 0.4,
atributes = scale(atributes)
boruta_atributes = as.data.frame(atributes)
boruta_atributes$logAppliances = data$logAppliances
boruta_atributes = as.data.frame(boruta_atributes)
str(boruta_atributes)
install.packages("Boruta")
library(Boruta)
set.seed(42)
boruta.train <- Boruta(logAppliances~., data = boruta_atributes, doTrace = 2)
data <- read.csv(file = "C:/Users/braciniewska/Documents/zum_appliances/ZUM_Appliances/data/energy_data_after_analysis.csv", stringsAsFactors = FALSE)
str(data)
# w ilu kolumnach brakuje danych
which(is.na(data))
# ile jest łącznie brakujących danych
sum(is.na(data))
mising<-data[is.na(data),]
data[is.na(data)] = 0
library(lubridate)
library(corrplot)
library(Hmisc)
data$logAppliances = log(data$Appliances)
data$logVisibility = log(data$Visibility)
data$logWindspeed = log(data$Windspeed)
data$logRh_out=log(data$Tdewpoint)
data$logT9=log(data$T9)
data$logT3=log(data$T3)
data$logT4=log(data$T4)
data$logT5=log(data$T5)
res <- cor(data, use = "complete.obs")
res[is.na(res)] = 0
round(res, 2)
corrplot(res, type = "full", order = "hclust",
tl.col = "black")
atributes <- data[,!names(data) %in% c("date", "logRh_out", "logWindspeed","X","T3","T4","T5","T9","Tdewpoint","rv1","rv2","RH_5","RH_3","RH_4","Windspeed","Visibility","logVisibility","Appliances","logAppliances")]
str(atributes)
atributes_with_interactions = model.matrix(~(lights+Press_mm_hg+RH_1+RH_2+RH_6+RH_7+RH_8+RH_9+RH_out+T_out+T1+T2+T6+T7+T8+hour+time_of_day+logT9+logT3+logT4+logT5)^2,atributes)
corr_data = as.data.frame(atributes_with_interactions)
corr_data$logAppliances = data$logAppliances
library(lubridate)
library(corrplot)
res <- cor(corr_data, use = "complete.obs")
res[is.na(res)] = 0
round(res, 2)
res = as.data.frame(res)
res[abs(res$logAppliances) > 0.4] # nie istnieja korelacje wieksze od 0.4,
atributes = scale(atributes)
